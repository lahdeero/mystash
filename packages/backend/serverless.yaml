service: mystash

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: ''
  timeout: 30
  apiGateway:
    binaryMediaTypes:
      - 'application/octet-stream'
      - 'image/png'
      - 'image/jpeg'
  environment:
    SECRET: ${env:MYSTASH_SECRET}
    DYNAMODB_ENDPOINT: http://host.docker.internal:8001
    USERS_TABLE_NAME: mystash-dev-users
    NOTES_TABLE_NAME: mystash-dev-notes
    FILES_TABLE_NAME: mystash-dev-files
    FILE_BUCKET: mystash-dev-infra-files-bucket
    S3_ENDPOINT: http://localhost:4566
    GITHUB_CLIENT_ID: ${env:GITHUB_CLIENT_ID}
    GITHUB_CLIENT_SECRET: ${env:GITHUB_CLIENT_SECRET}
    GITHUB_REDIRECT_URI: ${env:GITHUB_REDIRECT_URI}

functions:
  register:
    handler: dist/handlers/register.handler
    events:
      - http:
          path: api/register
          method: post

  login:
    handler: dist/handlers/login.handler
    events:
      - http:
          path: api/login
          method: post

  githubLogin:
    handler: dist/handlers/github-login.handler
    events:
      - http:
          path: api/login/github/init
          method: get

  githubVerify:
    handler: dist/handlers/github-verify.handler
    events:
      - http:
          path: api/login/github/verify
          method: post

  getNotes:
    handler: dist/handlers/get-notes.handler
    events:
      - http:
          path: api/note
          method: get

  createNote:
    handler: dist/handlers/create-note.handler
    events:
      - http:
          path: api/note
          method: post

  updateNote:
    handler: dist/handlers/update-note.handler
    events:
      - http:
          path: api/note/{id}
          method: put

  deleteNote:
    handler: dist/handlers/delete-note.handler
    events:
      - http:
          path: api/note/{id}
          method: delete

  getNoteFiles:
    handler: dist/handlers/get-note-files.handler
    events:
      - http:
          path: api/note/files/{id}
          method: get

  uploadFile:
    handler: dist/handlers/upload-file.handler
    events:
      - http:
          path: api/file
          method: post

  downloadFile:
    handler: dist/handlers/download-file.handler
    events:
      - http:
          path: api/file/{id}
          method: get

  deleteFile:
    handler: dist/handlers/delete-file.handler
    events:
      - http:
          path: api/file/{id}
          method: delete

plugins:
  - serverless-offline

custom:
  serverless-offline:
    noPrependStageInUrl: true
    httpPort: 8000
    debug: true
